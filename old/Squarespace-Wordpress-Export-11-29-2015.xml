<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
    <title>sawanoboly.net</title>
    <link>http://www.sawanoboly.net</link>
    <pubDate>Sun, 05 Jan 2014 16:31:54 +0000</pubDate>
    <description>be disposable.</description>
    <language>ja-JP</language>
    <wp:wxr_version>1.2</wp:wxr_version>
    <wp:author>
      <wp:author_id>907781776</wp:author_id>
      <wp:author_login>sawanoboriyu@higanworks.com</wp:author_login>
      <wp:author_email>sawanoboriyu@higanworks.com</wp:author_email>
      <wp:author_display_name><![CDATA[Sawanobori Yukihiko]]></wp:author_display_name>
      <wp:author_first_name><![CDATA[Yukihiko]]></wp:author_first_name>
      <wp:author_last_name><![CDATA[Sawanobori]]></wp:author_last_name>
    </wp:author>
    <wp:category>
      <wp:cat_name><![CDATA[null - null]]></wp:cat_name>
      <wp:category_nicename>null-null</wp:category_nicename>
      <wp:category_parent />
    </wp:category>
    <item>
      <link>/about/</link>
      <title>About</title>
      <pubDate>Fri, 31 Jan 2014 10:23:48 +0000</pubDate>
      <content:encoded><![CDATA[<p>Sawanobolyのサイト</p>]]></content:encoded>
      <wp:post_name>about</wp:post_name>
      <wp:post_type>page</wp:post_type>
      <wp:post_id>0</wp:post_id>
      <wp:status>publish</wp:status>
    </item>
    <item>
      <title>WEB+DB PRESS vol.85のAWS自動化特集でOpsWorksの記事を担当しました</title>
      <link>/blog/webdb85</link>
      <content:encoded><![CDATA[<p>雑誌の概要はこちら =&gt; <a href="http://gihyo.jp/magazine/wdpress/archive/2015/vol85" title="WEB+DB PRESS Vol.85｜技術評論社">WEB+DB PRESS Vol.85｜技術評論社</a> 。</p>
  
       [caption id="" align="alignnone" width="530.0"]<img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb08aae4b0dc5d503b3e74/1424689363326//img.jpg" alt="写真はオープンセミナー広島2015での発表から"/> 写真はオープンセミナー広島2015での発表から[/caption] 
  

<p>共著のみなさんも既にブログで紹介されています、各章の対象読者や雑誌のオススメ具合はこちらがとても参考になります。</p><ul>
<li><a href="https://twitter.com/sgwr_dts">@sgwr_dts(winebarrel)</a> さんの記事 =&gt; <a href="http://so-wh.at/entry/2015/02/21/AWS_as_Code%21%3A_WEB%2BDB_PRESS_Vol_85%E3%81%AB%E8%A8%98%E4%BA%8B%E3%82%92%E6%9B%B8%E3%81%8D%E3%81%BE%E3%81%97%E3%81%9F">AWS as Code!: WEB+DB PRESS Vol.85に記事を書きました - so what</a></li>
<li><a href="https://twitter.com/muramasa64">@muramasa64</a> さんの記事 =&gt; <a href="http://muramasa64.fprog.org/diary/?date=20150223">WEB+DB PRESS vol.85にCloudFormationの記事を書いた - 雑記帳(2015-02-23)</a></li>
<li><a href="https://twitter.com/y015i">@y15i(y13i)</a> さんの記事 =&gt; <a href="http://t.y13i.com/post/111752004680/web-db-press-vol-85-cloudformation">t.y13i.com — WEB+DB PRESS Vol.85にCloudFormationの記事を書きました</a></li>
</ul><p>特集を簡単に紹介すると、</p><ul>
<li>導入しやすく、まあまあ普及感のあるCloudFormationの現場ノウハウ</li>
<li>自分の担当したOpsWorksは(多分世間に求められている程度の)Getting Started</li>
<li>既存の環境もコードにするための思想と、それのリファレンス実装ともいえる<a href="http://codenize.tools">Codenize.tools</a>の紹介</li>
</ul><p>という内容です。</p><p>詳細はもうタップリ出てますし、実物も本屋にも並んでいます。折角なので少し記事の裏側で個人的に面白かった話などを書きます。</p><h2 id="">記事の経緯を聞いたよ</h2><p>できあがりは『AWS特集』でしたが、原案は<a href="https://twitter.com/gosukenator">@gosukenator(mizzy)</a>さんとのこと。</p><blockquote>
  <p><a href="http://togetter.com/li/727057">Infrastructure as Code 現状確認会(2014年10月)</a> のあとに、クックパッドの人たちが開発してるIaC(※Infrastructure as Code)なツールで記事書けるんじゃないか、と稲尾さんに企画を持ち込んで、打ち合わせをした結果、AWSにフォーカスした話にしましょう、ということになって、ああいった企画になりました。</p>
  
  <p>談: <a href="https://twitter.com/gosukenator">@gosukenator(mizzy)</a> さん</p>
</blockquote><p>そのままいけばクックパッドの<a href="http://codenize.tools">Codenize.tools</a>や<a href="http://itamae.kitchen">Itamae</a>、<a href="http://infrataster.net">Infrataster</a>ほかの記事になっていたのかもしれませんね。 <br>
(これはこれで読みたい方も多そうだし、雑誌から盛り上げるような方向もあっていいような気はしました。)</p><h2 id="codenizetools">Codenize.tools</h2>
  
      <a href="http://codenize.tools"  target="_blank" ><img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a9fe4b02904f4d9277c/1424689858150/Codenize_tools.png" alt=""/></a>
  

<p>クックパッドインフラツール達の何が特集企画として持ち込まれるほど面白いのかっていうと。</p><p>昨今<code>Infrastructure as Code</code>(以下、IaC)と言いつつも、色々と手を出しているうちにどうもツールに使われているような感覚に陥ることがあります。 <br>
便利そうなツールが出揃っているように見えても、自分の抱える問題を本質的に改善するためには、その手のお作法の学習コストや変態的ハック、またはツールの更新にいちいち振り回されるのは割りに合いません。</p><p>現在OSSとして公開されている各種ツールも、そもそもは開発者が彼ら自身のフローを自動化するためにはじまったのでしょう。</p><p>で、IaCのきっかけとも言えるインフラリソースのAPIに対して自身のフローをもって真正面から向き合っている<a href="http://codenize.tools">Codenize.tools</a>のは根底思想からしてやっぱり面白いと思うわけです。</p><p>ちなみに<a href="http://codenize.tools">Codenize.tools</a>という名称は、AWS自動化記事の校正段階である全体タイトル決め(<code>Issue#60</code>)の最中につけられました。 <br>
他の章はサービス名なので分かりやすいのですが、『クックパッド独自ツール』では微妙だなーという話になったので、じゃあグループ名をつけたらどうでしょう？と。</p><blockquote>
  <p>例えばCookpad suites(スイーツ)とか、ツールに一連のシリーズ名があるとぐっといい感じですよね。</p>
  
  <p>Github Issue #60 @sawanoboly 発言より</p>
</blockquote><p>私の提案(名前をつけるという部分で)は24時間以内に<a href="http://codenize.tools">Codenize.tools</a>の公開を持って採用されました。</p><blockquote data-preserve-html-node="true" class="twitter-tweet" lang="ja"><p data-preserve-html-node="true">なまえつけたよ！ <a data-preserve-html-node="true" href="http://t.co/BHEJBBMpe9">http://t.co/BHEJBBMpe9</a></p>— 運用でカバー (@sgwr_dts) <a data-preserve-html-node="true" href="https://twitter.com/sgwr_dts/status/552846637249208322">2015, 1月 7</a></blockquote><script data-preserve-html-node="true" async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><p>実際私が本特集で一番気に入っているのは4章の『Codenize.toolsによるメンテナンスの自動化』、その中でも「<code>Codenize.tools</code>のしくみ」で密かに語られるコードを用いて運用するということへのこだわりの部分です。</p><h2 id="github">Githubでの記事執筆</h2><p>技評さんとのお仕事、ひいては雑誌に記事を書くことは今回がはじめてでした。 <br>
噂のとおり編集、執筆者同士のやりとりはほぼすべてがGithubで行われ、やたらと快適でした。これは確立した先人達に感謝。</p>
  
       [caption id="" align="alignnone" width="1027.0"]<img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a55e4b032bc0834faf8/1424689752704//img.png" alt="Githubの記事リポジトリ"/> Githubの記事リポジトリ[/caption] 
  

<p>私は結構サボるタチなのでリモート向いてないんですが、編集の<a href="https://twitter.com/inao">@inao</a>さんのGithubまわりのテンションが高く、見ていると『あー、やらなきゃなー』という気分になりました。 開始時のWeb会議以降はすべてGithubでのやりとりだったので、リモートでの雰囲気作りは大事だよねと再認識。</p><p>今回私がリポジトリのオーナーだったので、実は自分だけSlack連携で流れを追うのに少しばかり楽をしていました。共著の皆さんごめん。</p>
  
      <img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a79e4b0f93fea10fd02/1424689789330//img.png" alt=""/>
  

<h3>菅原式レビューボード</h3><p>Githubでの記事執筆に関連して、今回面白かった事件を1つ。</p><p>個人の作業としては快適なGithubですが、相互レビューの段階で次の問題がありました。</p><ul>
<li>コミット単位でレビューを付けると全体的に追いづらい</li>
<li>Issueにレビューを書くとしても、どの時点のどの部分を指しているか分かりにくい事がある</li>
</ul><blockquote>
  <p>このへんは結構共通の認識のようで、<a href="https://reviewable.io">&gt; Reviewable</a>&gt; とかレビューのための外部サービスがあります。</p>
</blockquote><p>この問題、<a href="https://twitter.com/sgwr_dts">@sgwr_dts(winebarrel)</a>さんにより次の手法が提案されました。</p><ol>
<li>ブランチを作成</li>
<li>章ごとの原稿(まとまった1ファイル)を消してコミット</li>
<li>2をrevertコミット</li>
<li>Pull Request作成!</li>
<li>各自コメントをrevertコミットに対して付け、それの返信で議論＆対応する。</li>
</ol>
  
       [caption id="" align="alignnone" width="1087.0"]<img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0b06e4b05bee3a061b9e/1424689931570//img.png" alt="菅原式レビューボード"/> 菅原式レビューボード[/caption] 
  

<p>プログラムではやってはいけないですが、blameが少々潰れても構わない原稿のレビューにおいてはシンプルで導入しやすく、レビュー対応もほとんど漏れない(幾多のレビューコメントで私が2個ほど漏らしたのみ)という中々素晴らしい手法だと思いました。 <br>
レビュー及び対応は、各段階の区切りで次のように見やすくなっています。</p>
  
       [caption id="" align="alignnone" width="640.0"]<img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0b2ae4b0360a4985f886/1424689966591//img.png" alt="1つのコミットにある時点の原稿に対するすべてのレビューが集約"/> 1つのコミットにある時点の原稿に対するすべてのレビューが集約[/caption] 
  

<p>手法は名称がつくと流行りやすいこと、個人的に<code>苗字＋技名</code>は浪漫と思っていることから、この手法を私は『菅原式レビューボード』と名づけました。浸透はしませんでした。</p>

<h2 id="">おわりに</h2>

<p>なんやかんやで、共著の御三方[<a href="https://twitter.com/sgwr_dts">@sgwr_dts(winebarrel)</a>, <a href="https://twitter.com/muramasa64">@muramasa64</a>, <a href="https://twitter.com/y015i">@y15i(y13i)</a>]と編集の<a href="https://twitter.com/inao">@inao</a>さんのおかげで良い感じにまとまりました。 <br>
機会があればまた書いてみたいですね。</p>

<p>さて、とりあえず自分の関わった特集の事を書きました。 <br>
他にも(いただいた見本誌を読んでいると)『リアクティブプログラミング』、『楽しもうOSS開発』、『Railsらくらくテストデータ準備』、『Consulでクラスタ管理』と読み(試し)応えのある記事が沢山あるので、ぜひご一読を。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>webdb85</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>1</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 23 Feb 2015 11:21:58 +0000</pubDate>
      <wp:post_date>2015-02-23 11:21:58</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:21:58</wp:post_date_gmt>
      <category domain="post_tag" nicename="magazine"><![CDATA[magazine]]></category>
      <wp:postmeta>
        <wp:meta_key>structured_content</wp:meta_key>
        <wp:meta_value>{"oembed":{},"overlay":true}</wp:meta_value>
      </wp:postmeta>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
      <wp:postmeta>
        <wp:meta_key>_thumbnail_id</wp:meta_key>
        <wp:meta_value><![CDATA[8]]></wp:meta_value>
      </wp:postmeta>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0b2ae4b0360a4985f886/1424689966591//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0b2ae4b0360a4985f886/1424689966591//img.png</link>
      <title>attachment-54eb0b2ae4b0360a4985f886</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>2</wp:post_id>
      <wp:post_parent>1</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb0b2ae4b0360a4985f886]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb0b2ae4b0360a4985f886]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:12:42 +0000</pubDate>
      <wp:post_date>2015-02-23 11:12:42</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:12:42</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0b06e4b05bee3a061b9e/1424689931570//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0b06e4b05bee3a061b9e/1424689931570//img.png</link>
      <title>attachment-54eb0b06e4b05bee3a061b9e</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>3</wp:post_id>
      <wp:post_parent>1</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb0b06e4b05bee3a061b9e]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb0b06e4b05bee3a061b9e]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:12:06 +0000</pubDate>
      <wp:post_date>2015-02-23 11:12:06</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:12:06</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a79e4b0f93fea10fd02/1424689789330//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a79e4b0f93fea10fd02/1424689789330//img.png</link>
      <title>attachment-54eb0a79e4b0f93fea10fd02</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>4</wp:post_id>
      <wp:post_parent>1</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb0a79e4b0f93fea10fd02]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb0a79e4b0f93fea10fd02]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:09:45 +0000</pubDate>
      <wp:post_date>2015-02-23 11:09:45</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:09:45</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a55e4b032bc0834faf8/1424689752704//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a55e4b032bc0834faf8/1424689752704//img.png</link>
      <title>attachment-54eb0a55e4b032bc0834faf8</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>5</wp:post_id>
      <wp:post_parent>1</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb0a55e4b032bc0834faf8]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb0a55e4b032bc0834faf8]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:09:09 +0000</pubDate>
      <wp:post_date>2015-02-23 11:09:09</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:09:09</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a9fe4b02904f4d9277c/1424689858150/Codenize_tools.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb0a9fe4b02904f4d9277c/1424689858150/Codenize_tools.png</link>
      <title>attachment-54eb0a9fe4b02904f4d9277c</title>
      <wp:post_name>Codenize-tools-png</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>6</wp:post_id>
      <wp:post_parent>1</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb0a9fe4b02904f4d9277c]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb0a9fe4b02904f4d9277c]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:10:57 +0000</pubDate>
      <wp:post_date>2015-02-23 11:10:57</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:10:57</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb08aae4b0dc5d503b3e74/1424689363326//img.jpg</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb08aae4b0dc5d503b3e74/1424689363326//img.jpg</link>
      <title>attachment-54eb08aae4b0dc5d503b3e74</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>7</wp:post_id>
      <wp:post_parent>1</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb08aae4b0dc5d503b3e74]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb08aae4b0dc5d503b3e74]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:02:43 +0000</pubDate>
      <wp:post_date>2015-02-23 11:02:43</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:02:43</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb07fde4b0a0f14f9ccac1/1424690792613/TH160_9784774171418.jpg</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54eb07fde4b0a0f14f9ccac1/1424690792613/TH160_9784774171418.jpg</link>
      <title>attachment-54eb07fde4b0a0f14f9ccac1</title>
      <wp:post_name>TH160-9784774171418-jpg</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>8</wp:post_id>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54eb07fde4b0a0f14f9ccac1]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54eb07fde4b0a0f14f9ccac1]]></excerpt:encoded>
      <pubDate>Mon, 23 Feb 2015 11:21:58 +0000</pubDate>
      <wp:post_date>2015-02-23 11:21:58</wp:post_date>
      <wp:post_date_gmt>2015-02-23 11:21:58</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <title>オライリー・ジャパンからServerspec</title>
      <link>/blog/serverspec-the-definitive-guide</link>
      <content:encoded><![CDATA[<p>2015年1月17日にオライリー・ジャパンから出版の<a href="http://www.oreilly.co.jp/books/9784873117096/">Serverspec</a>が発売されます。</p>

<p>著者のmizzyこと宮下剛輔さんによる紹介記事はこちら。</p>

<ul>
<li><a href="http://mizzy.org/blog/2014/12/25/1/">「Serverspec」という本が出ます - Gosuke Miyashita</a></li>
</ul>

<p>『Serverspec』正誤表(公式サイト版)はこちら</p>

<ul>
<li><a href="http://serverspec.org/book/ja/">Serverspec - 『Serverspec』正誤表</a></li>
</ul>

<p>さてこの本、幸いなことに執筆時にレビュワーに誘っていただきました。 <br>
レビューでは思想や解説の内容を中心に、言いたいことが伝わるだろうかという見方でIssueを切りました。</p>

<p>微力ながら制作のお手伝いをした書籍をご恵贈いただき、手元に来た現物をみてニヤニヤしています。</p>
  
       [caption id="" align="alignnone" width="640.0"]<img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b23937e4b0d7856db27e5f/1420966526069//img.png" alt="Serverspec the definitive guide"/> Serverspec the definitive guide[/caption] 
  

<p>※ iPhone5Cは大きさ比較用。</p>

<p>扱いやすいサイズで持ち運びやすいですね。電子版も出るので、そちらは購入する予定です。</p>

<p>では折角なのでおすすめの章を2つ。</p>

<h2 id="3">使う人向けの3章</h2>

<p>簡素な公式ドキュメントの行間を解説してくれる3章は、テストコードをどう書けばよいのかから始まり、コードの使いまわしや環境およびセキュリティ要件へ対応するTipsが書かれています。 <br>
また、良くある悩みの『何をどこまでテストすればいいのか？』に対する指標が書いてあります。</p>

<p>Serverspecを使うことに関しては、3章を読めばしばらく困らないでしょう。</p>

<pre data-preserve-html-node="true">3章　Serverspecの本格利用
    3.1 RSpec
    3.2 リソースとリソースタイプ
    3.3 SSH経由でのリモートホストのテスト
    3.4 テスト対象ホストの追加
    3.5 動作のカスタマイズ
    3.6 一時的な動作の変更
    3.7 specファイルを複数のホストで共有
    3.8 ホスト固有情報の利用
    3.9 任意コマンドの実行
    3.10 並列実行
    3.11 様々なバックエンド
    3.12 テストコードの指針
    3.13 本章のまとめ
※ O'Reilly Japan - Serverspec http://www.oreilly.co.jp/books/9784873117096/ より</pre>

<h2 id="4">カスタマイズ・コントリビュートの4章</h2>

<p>4章はServerspec, SpecInfraの内部を解説してくれます。 <br>
特にSpecInfraは公式なドキュメントと言えるものがありませんが、4章の内容を理解すれば、Github上のコードをそのままドキュメントとして読めば大丈夫なくらいにはなります。 もちろんSpecを記述する際にも役立つ知識です。</p>

<p>また、それぞれのカスタマイズや拡張についての丁寧なウォークスルー、さらにはmizzyさんがプルリクをもらうとき(特に個人的に)気になることまで書かれています。</p>

<p>Serverspecを使い倒す、貢献する(オプション)なら4章で手を動かすといいですね。</p>

<pre data-preserve-html-node="true">4章　Serverspec内部の詳細
    4.1 Serverspecのアーキテクチャ
    4.2 Serverspecの処理の流れ
    4.3 コマンドクラス
    4.4 バックエンドクラス
    4.5 Serverspecのリソースタイプ拡張
    4.6 Specinfraの OSに関する処理
    4.7 Pryによる内部解析
    4.8 Serverspec自身のテスト
    4.9 コントリビュートの際の心構え
    4.10 本章のまとめ
※ O'Reilly Japan - Serverspec http://www.oreilly.co.jp/books/9784873117096/ より</pre>

<h2 id="">その他</h2>

<p>Serverspecはmizzyさんの活動テーマの1つ、継続的な改善の副産物だと思います。 中でもなぜServerspecが広まったのかは、伊藤直也(naoya)さんのまえがきに推察があります。</p>

<p>本エントリで紹介しなかった章には、mizzyさん曰く『思いを綴ったエッセイ』が多く含まれます。 <br>
Serverspecの活用法を把握(おそらく書籍を入手する当初の目的を達成)したら、これらのエッセイを読み返してみることをおすすめします。 <br>
この本の読者が触発され、何かしらの常識や慣習を改善する新しいツールを出してくると嬉しい。。？かもしれない。</p>

<p>最後に、mizzyさん無事出版おつかれさまです。</p>
  
       [caption id="" align="alignnone" width="949.0"]<img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b2398de4b03a53687ff7a9/1420966287064//img.png" alt="Network - GIthub Graphsより"/> Network - GIthub Graphsより[/caption]]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>serverspec-the-definitive-guide</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>9</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 11 Jan 2015 08:42:12 +0000</pubDate>
      <wp:post_date>2015-01-11 08:42:12</wp:post_date>
      <wp:post_date_gmt>2015-01-11 08:42:12</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
      <wp:postmeta>
        <wp:meta_key>_thumbnail_id</wp:meta_key>
        <wp:meta_value><![CDATA[12]]></wp:meta_value>
      </wp:postmeta>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b2398de4b03a53687ff7a9/1420966287064//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b2398de4b03a53687ff7a9/1420966287064//img.png</link>
      <title>attachment-54b2398de4b03a53687ff7a9</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>10</wp:post_id>
      <wp:post_parent>9</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54b2398de4b03a53687ff7a9]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54b2398de4b03a53687ff7a9]]></excerpt:encoded>
      <pubDate>Sun, 11 Jan 2015 08:51:25 +0000</pubDate>
      <wp:post_date>2015-01-11 08:51:25</wp:post_date>
      <wp:post_date_gmt>2015-01-11 08:51:25</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b23937e4b0d7856db27e5f/1420966526069//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b23937e4b0d7856db27e5f/1420966526069//img.png</link>
      <title>attachment-54b23937e4b0d7856db27e5f</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>11</wp:post_id>
      <wp:post_parent>9</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54b23937e4b0d7856db27e5f]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54b23937e4b0d7856db27e5f]]></excerpt:encoded>
      <pubDate>Sun, 11 Jan 2015 08:55:24 +0000</pubDate>
      <wp:post_date>2015-01-11 08:55:24</wp:post_date>
      <wp:post_date_gmt>2015-01-11 08:55:24</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b2376be4b03795e39f7382/1420967089590//img.jpg</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/54b2376be4b03795e39f7382/1420967089590//img.jpg</link>
      <title>attachment-54b2376be4b03795e39f7382</title>
      <wp:post_name>54b2376be4b03795e39f7382</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>12</wp:post_id>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-54b2376be4b03795e39f7382]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-54b2376be4b03795e39f7382]]></excerpt:encoded>
      <pubDate>Sun, 11 Jan 2015 08:42:12 +0000</pubDate>
      <wp:post_date>2015-01-11 08:42:12</wp:post_date>
      <wp:post_date_gmt>2015-01-11 08:42:12</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <title>Chef-Solo, Chef-Client LocalMode, Knife-Solo, Knife-Zero and us.</title>
      <link>/blog/2014/11/25/chef-solo-zero-knife-solo-zero</link>
      <content:encoded><![CDATA[<p>Chef-Soloが無くなるので、他の何かに乗り換える必要があるのか。
という話に対してKnife-Zeroをダシに何か言っておこう。</p>

<p>最初に言っておくと、今Chef-Solo、Knife-Soloを使っている人、多分何もしなくていい。</p>

<h2 id="">登場人物一覧</h2>

<ul>
<li>Chef-Solo
<ul><li>Chef-Server無しでローカルサーバにChefのレシピを適用する。Chef-Server非互換(11でほぼ改善)。</li></ul></li>
<li>Chef-Client LocalMode
<ul><li>Chef-Server無しでローカルサーバにChefのレシピを適用する。Chef-Server互換。</li></ul></li>
<li>Knife-Solo
<ul><li>レシピ一式を転送し、Chef-Soloをリモートサーバに適用する。</li>
<li>(追記)全体のワークフローは、VagrantのProvisionerに近い。</li></ul></li>
<li>Knife-Zero
<ul><li>レシピ一式を転送せず、SSH越しにChef-Client LocalModeを実行する。</li>
<li>(追記)従来のClient／Serverワークフローを踏襲。</li></ul></li>
</ul>

<h2 id="chefsolochefzerochefclientlocalmode">全てのChef-Solo関連がにChef-Zero(Chef-Client LocalMode)に変更されるというのは飛躍的な判断</h2>

<p>なんとなく騒がれているのは、これの元記事からなのかしら。</p>

<p><a href="http://www.creationline.com/lab/6085" title="[和訳] ソロからゼロへ: Chef Clientローカルモードへの移行 #opschef_ja #getchef_ja « CREATIONLINE, INC.">[和訳] ソロからゼロへ: Chef Clientローカルモードへの移行 #opschef<em>ja #getchef</em>ja « CREATIONLINE, INC.</a></p>

<p>基本的にこれはサーバのローカルで実行する場合についての話でしょう、まあそれならChef-Client LocalModeに変えるのはほとんど何も変更はいらないのでよくわかります。</p>

<blockquote>
  <p>参考： <a href="https://github.com/opscode/chef-rfc/blob/master/rfc031-replace-solo-with-local-mode.md">Chef-RFC031</a>
  『This means that chef-solo using "local mode" must be 100% backwards-compatible with existing chef-solo usage.』</p>
</blockquote>

<p>で、リモートでやるKnife-Soloについて考えた時に、"Chef-Solo無くなる"＝"Knife-Solo使えなくなる"でもないわけです。
Knife-Soloは単なる非公式のプラグインであって、公式がこういう記事でいちいち言及しないでしょうね。</p>

<h3 id="knifesolochefsolo">少なくともKnife-SoloはChef-Soloと心中なんてしないだろう</h3>

<p>日本でKnife-Soloがそこそこ広い認知度を持っているのは、伊藤直也さんの<a href="http://www.amazon.co.jp/dp/B00BSPH158">入門Chef Solo - Infrastructure as Code</a>によるところが大きいでしょう。多分そう、部分的にそう。</p>

<p>この本で覚えたフローや使い方が今後できなくなるかって言うと多分そんなことはなくて。
Knife-Solo開発陣はChefの動向をちゃんと追っています。</p>

<p><a href="https://github.com/matschaffer/knife-solo/issues/353" title="add local_mode to solo.rb · Issue #353 · matschaffer/knife-solo">add local_mode to solo.rb · Issue #353 · matschaffer/knife-solo</a></p>

<p>(関連ディレクトリをまるまる転送、リモートでLocalMode相当の実行形式に変更など)</p>

<p>ということでKnife-Soloでやっているものは、基本的にそのまま使い続けることもできそうだと思ってます。
実際Chef-Soloって無くなるのかも不明、もしかしたらChef14とか15になれば居なくなるのかもしれませんね。</p>

<h2 id="knifezerochefserver">Knife-ZeroはミニマムなChef-Server環境とのアップ/ダウングレード移行パス</h2>

<p>じゃあKnife-Zeroはどういう位置かというと、Chef-Server環境との相互移行がやりやすいChefの導入方法(の一つ)です。
SSH越しにリモートで実行されるChef-ClientはLocalModeではなく、通常のClientモードとしてChef-Server(SSH元のChef-Zero)に対して接続します。</p>

<p>なのでKnife-Solo(そもそも私は使ってない)の代わりではなく、既存のChef-Serverを畳む用途で作りました。</p>

<ul>
<li>Knife-Zeroではじめて、Node数が増えてきたらChef-Serverへ</li>
<li>Node数が少ないChef-ServerをたたんでKnife-Zeroへ</li>
</ul>

<p>Knife-Zeroは、概ねお一人様用Chef-Serverという感じです。node情報ををgit管理できたり、エディタで手元からしれっとattributeを追加できたりという利点とかありますが。
大人数で保守する場合や、継続的にChef-Clientを実行したい場合、Nodeがとても多い場合は多分Chef-Serverのほうがよいのかと思います。</p>

<h2 id="knifezero">Knife-Zero豆知識</h2>

<ul>
<li>Chef-Zeroは2,000nodeくらいまでなら性能的に問題ない。 (<a href="http://qiita.com/sawanoboly/items/35dd2f117262f4f21969" title="Chef-Zeroのキャパシティが気になったのでRubyでベンチマークをとった - Qiita">Chef-Zeroのキャパシティが気になったのでRubyでベンチマークをとった - Qiita</a>)</li>
<li>Knife-Zero制作のきっかけはlightchef(現<a href="https://github.com/ryotarai/itamae" title="ryotarai/itamae">itamae(github link)</a>)
<ul><li>Severspec的発想がいいと思った。</li>
<li>しかし同時に、『インベントリも収集せずに(light)Chefとはどういう了見か』と思った。</li></ul></li>
<li>Facebookの中の人も、SSH越しのLocalMode(Chef-Zero)を使っている。
<ul><li>手抜きのために考える事は同じだなと思いました。</li>
<li><a href="https://github.com/opscode/chef-zero/issues/86" title="SSL support · Issue #86 · opscode/chef-zero">SSL support · Issue #86 · opscode/chef-zero</a></li></ul></li>
<li>最初は本家へのPull Requestとして作成していた
<ul><li>とても煩雑なコードになって、説明するのが面倒に。</li>
<li>とりあえずリリースを優先、楽なKnifeのプラグインとして作成。</li>
<li>本家にマージしたい。</li>
<li>Chef本体からあまりコードの量的に離れたくない。</li></ul></li>
<li>リリース当初の私が書いたコードはほとんど残っていない。
<ul><li><a href="https://twitter.com/yasushia">@yasushia氏</a>によってリファクタリングが行われ、とてもスッキリしたのでv1.0.0を付けた。</li></ul></li>
<li>(Fixed) Chef12のRC版ではローカルモードが盛大にクラッシュする。
<ul><li><a href="https://github.com/opscode/chef/issues/2433" title="The local_mode doesn't create node object correctly on chef 12. · Issue #2433 · opscode/chef">The local<em>mode doesn't create node object correctly on chef 12. · Issue #2433 · opscode/chef</em></a></li><em>
<li>Knife-Zeroは自分では便利なので12対応はしておきたいんだけど。</li>
<li>羅列したこの記事のタイトルで、一番寿命が先に来るのは、もしかしてKnife-Zeroかもしれないよ。</li>
</em><li><em>(New) 治した！ <a href="https://github.com/opscode/chef/pull/2482" title="use Chef::JSONCompat.parse for file_contents #2433 by sawanoboly · Pull Request #2482 · opscode/chef">use Chef::JSONCompat.parse for file</a></em><a href="https://github.com/opscode/chef/pull/2482" title="use Chef::JSONCompat.parse for file_contents #2433 by sawanoboly · Pull Request #2482 · opscode/chef">contents #2433 by sawanoboly · Pull Request #2482 · opscode/chef</a></li></ul></li>
</ul>

<p>つらつらと書きましたが、Knife-Zeroは色々と楽をできるように作ったので、新規のシステムをChefで作り始めるとか、既存のシステムにChefを導入するとかならKnife-Zeroをおすすめします。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/11/25/chef-solo-zero-knife-solo-zero</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>13</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Tue, 25 Nov 2014 00:38:47 +0000</pubDate>
      <wp:post_date>2014-11-25 00:38:47</wp:post_date>
      <wp:post_date_gmt>2014-11-25 00:38:47</wp:post_date_gmt>
      <category domain="post_tag" nicename="chef"><![CDATA[chef]]></category>
      <category domain="post_tag" nicename="knife-zero"><![CDATA[knife-zero]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <title>『Chef活用ガイド コードではじめる構成管理』を書きました</title>
      <link>/blog/chefbook</link>
      <content:encoded><![CDATA[<p>米Chef社(<a href="http://www.getchef.com/">http://www.getchef.com/</a>)が開発しているChefというソフトウェアの本を、クリエーションライン株式会社の樋口さんと共著しました。<a href="http://ascii.asciimw.jp/books/books/detail/978-4-04-891985-2.shtml">アスキー・メディアワークスさんから出版</a>されます。</p><p>発売を前に手元に２冊届きました、少々ボリュームのあるサイズ(672P)となっています。</p>
  
      <img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/53526b5ce4b03b169d83a780/1397910749481//img.png" alt=""/>
  

<h3 id="">何を書いたのか</h3>

<p>導入はInfrastructure as Codeという概念について述べています。 その後はInfrastructure as Codeの１要素としてChefを利用することへの助けとなるべく、Chefの全要素を出来る限り詳しく解説しています。</p>

<p>Chefの解説については書き下ろしと、公式ドキュメントにある要素をいくらか組み直して、細かい解説などを入れながら再構成して章立てした内容になっています。 書き下ろし部分の内容を考えるために最も参考にしたのはChef-Clientのソースコードでした。</p>

<p>最後に付録として、執筆当時に公式のリファレンスに存在したCookbook(Resources)やLWRPの和訳などをつけています。 付録のうち和訳部分に関しては、重複するサンプルを抽出して読みやすさを調整したり、コードに間違いがある部分などを本家にフィードバックしながら修正したりといった手を加えています。</p>

<p>本編４５０P、付録が２００P強という内訳です。</p>

<h3 id="">誰に向けて書いたのか</h3>

<p>導入部分はどちらかというとChefの採用を検討するマネジメント層や、極端なところでITサービスプロバイダの経営層に向けて書いています。 Infrastructure as Codeという概念を引き合いに、最近サービスを支えるインフラに対して提言されているのはこのようなことですよと紹介し、コストやリスクを減らしていきましょうという呼びかけをしています。</p>

<p>導入部以降はいわゆる現場向けといえそうです。Chefを内部の構造からまあまあ詳細に解説しているので、実際にChefを触ってみたい・触っている・もっと使いこなしたいという方々や、Chefの挙動に興味や疑問を持つ方々に是非読んでいただきたいと思っています。</p>

<h3 id="">書かれていないこと</h3>

<p>そもそもChefだけでインフラの管理がよくなるという事は決してありませんし、この本でも出だしにそう断りを入れています。 コンピュータシステムのライフサイクル管理を効率良く行なうには、用途および組織にあったツールチェーンを確立するのが望ましいことは重々承知ですが、Chefから少し離れる要素や、他のツールからワークフローの一部として使われるChefについては、この本ではほぼ解説していません。</p>

<p>そして、この本はあくまでガイドという位置づけであり、導入の検討や適用範囲はあくまで組織でのプランやコストを考慮して各自が行わなければなりません。もちろん事例やサンプルもそれなりに書いており、参考にすることもできますが、どこでも通用するベスト・プラクティスというわけでもありません。 (観光ガイドブックであれば、名所の場所は書かれていても、観光レポートは無いでしょう？)</p>

<p>ただ、テーマをChefだけに絞ったこともあり、現状で書籍という形に限れば世界中で比べても一番Chefについて詳しく書かれた本(あとOhaiも)になっていると思います。 検討の材料、導入後のリファレンスとしても十分役に立つでしょう。</p>

<h3 id="">なぜ書いたのか</h3>

<p>至る経緯は諸所ありますが、お話をいただいたからです。</p>

<p>その時点でそこそこChefを使ったり、他所に導入したりを始めていたので次のような理由で受けました。</p>

<ul>
<li>自分がChefを忘れても大丈夫なように、本にまとめておけるならラッキー</li>
<li>人に説明するときにラク</li>
<li>人からの質問がいくらか具体的になる</li>
</ul>

<h3 id="">どのように書いていたのか</h3>

<p>動いていたのは2013年7月〜2014年4月、そのうち9月後半〜１月にほとんどの内容が書かれました。 <br />
書き始める前はソースコードや関連資料の調査、１月後半からは校正につぐ校正。</p>

<p>原稿の管理と、共同執筆中のコミュニケーションではこれらが役に立ちました。</p>

<ul>
<li>github(git)</li>
<li>Skype</li>
</ul>

<p>内容はGithubのリポジトリを更新して共有し、やや大きめなテーマはIssueとして管理、ちょっとした方針や文章のすり合わせはSkypeでと、快適な執筆環境を目指してツールを活用することにしました。(Skypeではくだらない雑談も相当交わされましたが)</p>

<p>共著の樋口さんとは、本について７月(<a href="http://chef-meetup-kansai.doorkeeper.jp/events/4978">第１回 Chef Casual Talks Kansai</a>の翌日)に分担を決めた後は、一度も顔を合わせることなくすべての作業を終えることが出来ました。</p>

<p>私の側では、主にこれらのツールで原稿を作成しました。</p>

<ul>
<li>エディタ(vim, bbedit)</li>
<li>プレビュー(Mou, Marked, git(差分))</li>
<li>Chefのソースビュアー(vim, git(差分および履歴))</li>
</ul>

<p>プレビューツールからわかると思いますが、生原稿はMarkdownでした。 原稿書きには、gitのログと差分確認がかなり役立ちます。</p>

<p>校正段階では主にこれらのツールで原稿の修正にあたりました。</p>

<ul>
<li>Mail &amp; unzip, mi(旧ミミカキエディット)</li>
<li>github(git)</li>
</ul>

<p>初稿より後は、MarkdownではなくEWBで(変換された)となったんですが、文字コードがEUC-JPでbbeditがイマイチ自動判別しなかったので、国産エディタのmiに頼りました。</p>

<p>ここでもやっぱりGithubが活躍します。章ごとのブランチを作成して、平行して校正を進めたり、適用漏れを抽出して追跡したり、 gitリポジトリは軽作業などもふくめて、結局2200コミットくらいになりました。</p>
  
      <img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/53526b9de4b06b13869dbc9d/1397911538760//img.png" alt=""/>
  

<p>環境用品のうち、特に活躍した3つをピックアップします。</p><ul>
<li>MacBook Pro Retina13
<ul><li><a href="http://www.quickresapp.com">QuickRes</a>で、画面をかなり広くして使用、参考資料を見ながらの執筆に</li></ul></li>
<li>Contessa (岡村製作所)
<ul><li>作業に集中するのに調度良かった</li>
<li>腰痛が全然気にならなくなった</li></ul></li>
<li>SHOT NOTE(KING JIM)
<ul><li>構成図等の提出はこれに手書きして取り込んだ</li></ul></li>
</ul><h3 id="">最後に</h3><p>本書を書くのは中々骨の折れる作業でしたが、周囲の協力者や家族の理解もあって、ようやく書店に置かれる所までこぎつけました。
あとは料理本のコーナーに並ばないことだけを祈っておきます。</p>

  <div class="product-block" class="clear">

    

    <div class="productDetails left">
      <a href="http://www.amazon.co.jp/Chef%E6%B4%BB%E7%94%A8%E3%82%AC%E3%82%A4%E3%83%89-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A7%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B%E6%A7%8B%E6%88%90%E7%AE%A1%E7%90%86-%E6%BE%A4%E7%99%BB%E4%BA%A8%E5%BD%A6/dp/4048919857%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dribono88-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4048919857" target="new" class="product-title title">Chef活用ガイド コードではじめる構成管理</a>
       
        <div class="product-price price">
          
          <span class="list-price">￥ 4,212</span>
          
        </div>
      
      <div class="product-author author">By 澤登亨彦, 樋口大輔</div>
      <a href="http://www.amazon.co.jp/Chef%E6%B4%BB%E7%94%A8%E3%82%AC%E3%82%A4%E3%83%89-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A7%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B%E6%A7%8B%E6%88%90%E7%AE%A1%E7%90%86-%E6%BE%A4%E7%99%BB%E4%BA%A8%E5%BD%A6/dp/4048919857%3FSubscriptionId%3D0ENGV10E9K9QDNSJ5C82%26tag%3Dribono88-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4048919857" target="new" class="buy-button"><input type="button" class="sqs-amazon-button sqs-system-button sqs-editable-button" value="Buy on Amazon"/></a>

    </div>

  </div>

<hr />

<h3 id="chef">追記、『Chef活用ガイド』読者アンケートを作成しました。</h3>

<p>この本を読んでいただいた方(購入・回し読み問わず)を対象に、アンケートを作成しました。</p>

<p><a href="https://jp.surveymonkey.com/s/HSL5QBK" title="書籍『Chef活用ガイド』読者アンケート Survey">書籍『Chef活用ガイド』読者アンケート Survey</a></p>

<p>では締めを<a href="http://vdr.jp/d/20140421.html" title="Chef活用ガイド コードではじめる構成管理, なぜ書いたのか, どのように書いていたのか, 苦労したこと, おわりに - vdrめも(2014-04-21)">Chef活用ガイド コードではじめる構成管理 - vdrめも(2014-04-21)</a>から引用で。</p>

<blockquote>
  <p>世に出るのはもう少し先で、その上読み終えるにはかなりの時間がかかるかと思いますが、よろしければご回答いただければ幸いです。</p>
</blockquote>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>chefbook</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>14</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sat, 19 Apr 2014 12:40:03 +0000</pubDate>
      <wp:post_date>2014-04-19 12:40:03</wp:post_date>
      <wp:post_date_gmt>2014-04-19 12:40:03</wp:post_date_gmt>
      <category domain="post_tag" nicename="chef"><![CDATA[chef]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/53526b9de4b06b13869dbc9d/1397911538760//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/53526b9de4b06b13869dbc9d/1397911538760//img.png</link>
      <title>attachment-53526b9de4b06b13869dbc9d</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>15</wp:post_id>
      <wp:post_parent>14</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-53526b9de4b06b13869dbc9d]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-53526b9de4b06b13869dbc9d]]></excerpt:encoded>
      <pubDate>Sat, 19 Apr 2014 12:45:37 +0000</pubDate>
      <wp:post_date>2014-04-19 12:45:37</wp:post_date>
      <wp:post_date_gmt>2014-04-19 12:45:37</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/53526b5ce4b03b169d83a780/1397910749481//img.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/53526b5ce4b03b169d83a780/1397910749481//img.png</link>
      <title>attachment-53526b5ce4b03b169d83a780</title>
      <wp:post_name />
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>16</wp:post_id>
      <wp:post_parent>14</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-53526b5ce4b03b169d83a780]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-53526b5ce4b03b169d83a780]]></excerpt:encoded>
      <pubDate>Sat, 19 Apr 2014 12:32:27 +0000</pubDate>
      <wp:post_date>2014-04-19 12:32:27</wp:post_date>
      <wp:post_date_gmt>2014-04-19 12:32:27</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <title>合同会社の話その2</title>
      <link>/blog/2014/3/23/about-llc-02</link>
      <content:encoded><![CDATA[<p><a href="http://www.sawanoboly.net/blog/2014/3/22/about-llc-01" title="合同会社の話その１ — sawanoboly.net">合同会社の話その１ — sawanoboly.net</a>の続き。</p>

<h2 id="">売上と経費と役員報酬</h2>

<p>このセクションのお話は、私が税理士さんと相談した内容などがベースになっています。実際に行なう際は一応確認しといたほうが良いとは思います。</p>

<h3 id="">売上高</h3>

<p>会社として請求するお仕事は売上高になります。</p>

<p>この請求に対する支払いは会社のお財布に入り、経費や役員報酬、それと従業員がいれば給与はそこから支払います。</p>

<h3 id="">役員報酬、賞与</h3>

<p>役員報酬に関しては次のような感じです。</p>

<ul>
<li>役員報酬額は各自で決める、決議は総会</li>
<li>会計期間の期首から3ヶ月間に、総会で変更可能(参加時や、未定だった役員報酬を決める場合はその限りでない)</li>
<li>役員賞与は会計期間の期首から3ヶ月間に総会で決めれば損金(経費)算入可能、それ以外の期間では法人税の対象になる</li>
</ul>

<p>と言ってもすべて帳簿上で合っていればよく、基本的には個人の収入を含めて、<strong>『全体として使えるお金』</strong>をベースに取り決める事がよいと思います。 <br />
極端な話、役員報酬が1円でも百億万円でもどうでもいい話で、それに応じた給与明細と源泉徴収票を切るだけです。 <br />
ただしもちろん所得として処理されるので、五兆円とかの年収にしたらそれに応じた所得税を収めないといけない事はお忘れなく。</p>

<p>ちなみに私個人としては住宅ローン控除があるので、所得税がゼロになる範囲で調整しています。 <br />
その結果、会社としては経費に入れられつつ、全体として使用できるお金に数ることができるというわけですね。</p>

<p>なお、HiganWorks合同会社では、出資者に個人事業としての確定申告を推奨しています。
これは会社の売上として処理しない方が良い収入を個人の臨時収入としてもらうためと、掛け持ち歓迎だからです。</p>

<p>例えば出版の原稿料、講演の謝礼などです。これを会社の売上にすると、経費で使いきらなければ法人税がかかるので結局税率からいって勿体ないんですね。 <br />
会社の財布に入れてしまうと、個人に還元するのが結構面倒になりますが、個人事業で処理すれば個人の所得となります。ちなみに臨時収入なので個人事業での事業税はかかりません。 <br />
ここらを考慮しつつ、ついでに社会保険(厚生年金)の額の設計を踏まえてから役員報酬額は決定すればいいと思います。</p>

<p>そして掛け持ちの場合も確定申告時の給与所得欄にそれぞれからもらった源泉徴収票に基づいた金額を記入するだけです。 <br />
紳士協定として副業をNGとしている会社もありますが、個人的にIT系のエンジニアに対して掛け持ちNGとすることには不満があります。</p>

<h3 id="">経費</h3>

<p>経費に入れるものは基本的に裁量です。あまりにもアカンのは税理士さんに止められます。</p>

<p>HiganWorks合同会社における分岐点の一例を紹介しましょう。</p>

<ul>
<li>コーディングのしすぎで手首痛いから湿布=> ギリ経費</li>
<li>目薬 => アカン、自然みてこい</li>
</ul>

<p>もう一つ例を挙げると、役員の住居が賃貸ならば社宅として会社の経費から出すことができます。 <br />
こういうのも法人税と個人の所得税を考えると、トータルで使えるお金が増える節税になるんですよね。</p>

<h3 id="">余談</h3>

<p>全員社長(代表)で一緒の財布、各自のお小遣いは全員の一致が必要。これってもう結婚と同義なんですよね。 <br />
合同会社を作るときは、その点留意しようね。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/3/23/about-llc-02</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>17</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 23 Mar 2014 14:31:58 +0000</pubDate>
      <wp:post_date>2014-03-23 14:31:58</wp:post_date>
      <wp:post_date_gmt>2014-03-23 14:31:58</wp:post_date_gmt>
      <category domain="post_tag" nicename="llc"><![CDATA[llc]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <title>合同会社の話その１</title>
      <link>/blog/2014/3/22/about-llc-01</link>
      <content:encoded><![CDATA[<p>経営している合同会社という組織について。</p>

<h2 id="">社員</h2>

<p>社員は普通の会社と同じく出資者です。もちろん雇用契約で従業員(使用人)を雇うことができます。</p>

<ul>
<li>出資は法人でも自然人でもOK</li>
<li>出資額と議決権は関係ない</li>
<li>出資額と報酬額は関係ない</li>
</ul>

<p>誰がどのくらい権限をもつか、報酬額をどうするかは社員で総会を開いて決めます。 <br />
例えば総会の議決権は代表社員だけとか、業務執行社員全員/過半数の賛成で決議などから選んで定款に記載します。</p>

<p>ちなみにHiganWorks合同会社では総会の議案について、業務執行社員全員の賛成が必要としています。</p>

<p>出資額は登記事項でいう資本金になりますが、このパラメータは誰が見ているんでしょうね。 <br />
HiganWorks合同会社の設立時は資本金10千円でした。</p>

<p>一応、通常結ぶ契約の額くらいか、役員報酬数カ月分くらいを目安にした資本金額にしておくのが無難かとも思いつつ、
合同会社では利益剰余金の資本組み入れができないため、増やそうと思ったら少しコツがいるので気が向いたら。</p>

<h3 id="">業務執行社員</h3>

<p>出資者は基本的に業務執行社員となります、権限は普通の会社でいう社長さんと同じです。 <br />
分かりやすく言うと業務執行社員は全員が契約書などに署名して、代表印を押すことができます。 <br />
労務的なところは普通の会社でいう役員とほぼ同じでしょう。</p>

<p>業務執行社員は登記簿に載せます、加入・退社時は法務局に登記事項の変更として届け出ます。当然有料です。</p>

<p>出資だけで業務を行わない場合は登記簿に乗らない社員です。口を出せるかどうかは定款によります。 <br />
ちなみにHiganWorks合同会社には出資のみという立場の人はいません。</p>

<p>業務執行社員に対する給与は役員報酬という扱いです。金額は総会で決めます。</p>

<h3 id="">代表社員</h3>

<p>全員社長では分かりにくいという時、対外的に代表社員というのを1名立てて代表取締役などと紹介することがあります。 <br />
これも内部的に権限は定款次第なのですが、普通に代表者氏名をこの代表社員に固定したりもします。</p>

<p>ちなみに設立時にだれかが個人の登録あり印鑑を使う必要があり、登記上はその人が代表社員になります。 <br />
印鑑を登録した人は、業務執行社員としても代表社員としても記載されるため、登記簿では名前は2つ記載されます。</p>

<p>HiganWorks合同会社ではこの登記上の代表社員は私です。 <br />
以前は特に区別する必要も無かったため、名刺などにもそう書いていたのですが、業務執行社員が増えたので対外的には業務執行社員に統一しようかと思っています。</p>

<p>次は経費と役員報酬の話でもしようかな。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/3/22/about-llc-01</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>18</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sat, 22 Mar 2014 04:11:59 +0000</pubDate>
      <wp:post_date>2014-03-22 04:11:59</wp:post_date>
      <wp:post_date_gmt>2014-03-22 04:11:59</wp:post_date_gmt>
      <category domain="post_tag" nicename="llc"><![CDATA[llc]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <title>JAWS DAYS 2014のImmutable Infrastructure(II)トラックで話した</title>
      <link>/blog/2014/3/17/jaws-days-2014immutable-infrastructure</link>
      <content:encoded><![CDATA[<p><a href="http://jawsdays2014.jaws-ug.jp/" title="JAWS DAYS 2014">JAWS DAYS 2014</a>セッションで話しました。</p>

<h2 id="infrastructureascodeimmutableinfrastructure">Infrastructure as Codeと 組織のドキュメンテーション ＋ Immutable Infrastructure事例</h2>

<p>スライドはこちら。</p>

<p><iframe data-preserve-html-node="true" src="http://www.slideshare.net/slideshow/embed_code/32338167" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div data-preserve-html-node="true" style="margin-bottom:5px"> <strong data-preserve-html-node="true"> <a data-preserve-html-node="true" href="https://www.slideshare.net/YukihikoSawanobori/jawsdays-infra" title="Infrastructure as Codeと 組織のドキュメンテーション ＋ Immutable Infrastructure事例" target="_blank">Infrastructure as Codeと 組織のドキュメンテーション ＋ Immutable Infrastructure事例</a> </strong> from <strong data-preserve-html-node="true"><a data-preserve-html-node="true" href="http://www.slideshare.net/YukihikoSawanobori" target="_blank">Yukihiko SAWANOBORI</a></strong> </div></p>

<p>現場にいらっしゃった方の反応などもTogetterにまとめて頂いています。 <a href="http://togetter.com/li/639910" title="2014/03/15 JAWS DAYS 2014 - Immutable Infrastructureトラック #jawsdays #infra - Togetterまとめ">2014/03/15 JAWS DAYS 2014 - Immutable Infrastructureトラック #jawsdays #infra - Togetterまとめ</a></p>

<h2 id="immutableinfrastructure">『Immutable Infrastructure』事例について</h2>

<p>大阪某所でやっているGiraffiから事例を紹介しました。</p>

<p><a href="https://www.facebook.com/giraffi.devops" title="Giraffi DevOps">FBページ:Giraffi DevOps</a></p>

<p>当時はImmutable Infrastructureなんて'名前'は全く意識していません。
構成を検討する際ベースにしたのは、従来のサービス死活監視に対する不満でした。</p>

<p>サービス継続性とサーバ単体の死活が直結しないよう抽象化し、アラートの粒度や優先度を分類して、即時対応しなければいけないケースを減らそうという目的で構成をDeveloperと一緒に検討したんですよね。</p>

<p>その結果、従来のSPOFはDisposable Componentsになり、運用の方法としてImmutableも選択できる構成となった事例です。</p>

<p>パネルセッションでは言いそびれましたが、どの層が『Immutable Infrastructure』するべきか、また恩恵をうけるかというところでは、『夜中にアラートで起こされる人』こそが。じゃんじゃんやるべきなのかもしれませんね。</p>

<h2 id="infrastructureascode">『Infrastructure as Codeと 組織のドキュメンテーション』について</h2>

<p>『Immutable Infrastructure』トラックでなんか話せと言われてから、普通に説明したって全員被るに決まってるがなと思いました。
それならば、説明は他のセッションにまかせて、前提知識である『Infrastructure as Code』の導入支援をつくろうとしたらこうなりました。</p>

<p>この話はもともと、『手順書は芸術品ではないか？』という発想から始まっています。</p>

<p>で、その会話とクヌース先生の文芸的プログラミングあたりの概念を結びつけた<code>@azukiwasher</code>氏によって書き起こされたのが『ドキュメント礼賛(原題：手順書礼賛)』です。</p>

<p><a href="https://gist.github.com/azukiwasher/8571505#file-gistfile1-txt" title="gist:8571505">gist:8571505</a></p>

<blockquote data-preserve-html-node="true"><pre data-preserve-html-node="true">
## ドキュメント礼賛


断言しよう。ドキュメントこそがマシンを隷属化し、人間のために使役させるための最善の方策である。
なぜなら、マシンをコントロールする「ドキュメント」を理解できるのは人間だけであり、
マシンは決してそれを理解することはできないからだ。

ドキュメントは、マシンにとって高級すぎる別世界の読解不可能な暗号だ。読解不可能という点が人間
にとって甚だ都合がいい。人間の企みがマシンに理解されてはおしまいなのだから。
企みは、マシンから秘匿され秘密裏のうちに人間の「手」によって着実に行使されねばならない。

一方、ドキュメントは人間によって書かれ、それを「玩味」できるのも人間だけである。
人間だけがドキュメントの行間を読み、レトリックを味わい、隠された意味を発見できる。
「作者」の意図を自らに与えられた使命に、いま誇らしげにキーボードを叩きはじめる・・・。
そしてすべての手順が終わったとき、彼は作者との一体感を感じ、ドキュメントをシェアしあう、
親密なコミュニティ、やさしい仲間たちに迎え入れられる。

ここに強い人間たちの結束が生まれ、ついにはマシンをコントロールし人間のために永遠に
労働しつづける奴隷たらしめることに成功する。

繰り返す。ドキュメントこそがマシンを隷属化し、人間のために使役させるための最善の方策である。

決してその逆ではない。
</pre></blockquote>

<p>『手順書は芸術品ではないか？』 => 『洗練される』 => 『実行可能な機能美』 => 『Chefのレシピなどに行き着く』 => 『真の手順書とは(いわゆる)コードなのだ』</p>

<p>この文書が面白かったので、人類向けのセッションに起こしてみました。</p>

<p>最近ちょいちょい『ChefおよびInfrastructure as Code』について話を聞きたいという声をかけて頂いて幾つか訪問したり、実際にトレーニングをさせて頂いてますが、やはりみなさん難しく考え過ぎだったり、新しいことへの抵抗勢力があったりと結構モヤモヤするんですよ。</p>

<p>イベント会場にいらっしゃる方々は、『Infrastructure as Code』の何がよいかなんて十分ご存知でしょうが、さて自社に持ち込んで〜となるとやはり困る。それをどのように説得するかの一例として考えたメソッドとしても使えるとよいなと考えて、かなり回りくどく色々と言ってみましたがどうだったでしょうか。</p>

<p>発表後の質問でもでましたが、あらためてアプローチの例を並べてみました。</p>

<ul>
<li>権威を呼んでくる</li>
<li>対象層向けの本を出す</li>
<li>自分が出世する</li>
<li>実際にやって見せる</li>
</ul>

<p>個人的なおすすめは、『実際にやって見せる』ですね。</p>

<p>例えば社内でのクラブ活動をしてみる。結局、業務内で何とかしようとするのは中々難しいです。
だったら自腹でクラウド使ったり、内輪のシステムを作って研究発表なんかするのが遠回りのようで一番効果的のように思います。</p>

<h2 id="">パネルセッション</h2>

<p>お会いしたかった方々と、まとめて会えるという個人的に嬉しい企画でした。
このトラックに放り込んでくれた<a href="https://twitter.com/urasoko">@urasoko</a>さん、そのあと取りまとめいただいた<a href="https://twitter.com/stanaka">@stanaka</a>さんほかスタッフの方に感謝！</p>

<p>パネルセッションのまとめはこちらに => <a href="http://blog.stanaka.org/entry/2014/03/15/215437" title="JAWS DAYS 2014 Immutable Infrastructure パネルディスカッション - stanaka's blog">JAWS DAYS 2014 Immutable Infrastructure パネルディスカッション - stanaka's blog</a></p>

<p><img src="https://scontent-a-nrt.xx.fbcdn.net/hphotos-ash3/t1.0-9/1549336_611790635570300_2057620228_n.jpg" alt="" title="" /></p>

<p>時間の都合で普通に喋れなかったのがはちと残念ですが、この日は<a href="http://mizzy.org/">@mizzy</a>さんとたっぷり密談したので、今後はその成果を出していきたいですね。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/3/17/jaws-days-2014immutable-infrastructure</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>19</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 17 Mar 2014 06:07:16 +0000</pubDate>
      <wp:post_date>2014-03-17 06:07:16</wp:post_date>
      <wp:post_date_gmt>2014-03-17 06:07:16</wp:post_date_gmt>
      <category domain="post_tag" nicename="event"><![CDATA[event]]></category>
      <category domain="post_tag" nicename="immutableinfrastructure"><![CDATA[immutable_infrastructure]]></category>
      <category domain="post_tag" nicename="infrastructureascode"><![CDATA[infrastructure_as_code]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <title>Chef-Server環境で使うCookbookをVagrantとChef-zeroで開発する</title>
      <link>/blog/2014/3/5/vagrant-with-chef-zero</link>
      <content:encoded><![CDATA[<p>最近はChef-Severの導入も簡単になりました。
<a href="http://www.getchef.com/chef/install/">パッケージから導入</a>はもちろん、<a href="https://aws.amazon.com/marketplace/pp/B00HUHTZFM">aws marketplaceで入手</a></p><p>とはいえテスト環境にChef-Serverを強いるのも</p><h2 id="chefzero">Chef-zero</h2><p><a href="https://github.com/opscode/chef-zero">https://github.com/opscode/chef-zero</a></p><p>Chef-zeroはChef-Serverのホットモックのようなものです。ほぼChef-Serverとして動作する小さなプロセスですが次の特徴があります。</p><ul>
<li>認証はするフリで全部OK</li>
<li>データはメモリに保存、永続化なし</li>
</ul><p>Chef-Serverを使ったCookbookの開発をする際に、データをクリアしたい場合もありますが意外と後処理が面倒です。
Chef-zeroならプロセスのリスタートで綺麗な状態になるので、knifeで必要な要素を戻すだけで再度テストを行なうことができます。</p><p>詳細は次のリンクが参考になります。</p><p><a href="http://www.creationline.com/lab/2749" title="軽量簡易Chef Server「chef-zero」を使ってみよう #opschef_ja « CREATIONLINE, INC.">軽量簡易Chef Server「chef-zero」を使ってみよう #opschef_ja « CREATIONLINE, INC.</a></p><h2 id="vagrantchefzero">VagrantでChef-zero</h2><p>ではChef-zeroのプロセスをどこに立てるか。<a href="https://github.com/test-kitchen/test-kitchen">test-kitchen</a>ではCookbookをテストするVMで直接Chef-zeroを起動して、ダミーのChef要素を入れることができますが、現時点ではそのままシームレスにChef-Server環境に持って行こうとするにはいまいち感があります。</p><p>じゃあVagrantだろうなということで、一式書いてリポジトリに登録しました。</p><p><a href="https://github.com/OpsRockin/vagrant_with_chefzero_example">https://github.com/OpsRockin/vagrant<em>with</em>chefzero_example</a></p>
  
      <img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/5316e961e4b0e91cea1360c9/1394010465590/vagratn_with_chef-zero.png" alt=""/>
  

<p>これなら<code>vagrant up chefzero</code>するだけでChef-zeroをほぼChef-Serverとして使い放題です。</p><p><code>chefzero</code>のVMだけはChef-Soloで構築しますが、ほかのVMはChef-zeroに対するChef-ClientとしてProvisioningすることができます。</p><p>最初は手元だけ直して、Cookbookのアップロードを忘れることもありますが、すぐ慣れるでしょう。</p><p>通常操作はknifeを使えるので、他の環境に持っていく際に<code>knife.rb</code>指定の切り替えで済むのが助かりますね。</p><h2 id="rakefile">開発作業用のRakefile</h2><p>レシピ開発＆テストを効率よく行なうには、とりあえずRakeのタスクを作っておくとよいです。</p><script data-preserve-html-node="true" src="https://gist.github.com/sawanoboly/9363256.js"></script><p>それぞれこんな作業をやらせています。</p><pre data-preserve-html-node="true"><code data-preserve-html-node="true">rake upload # Chef要素のアップロード
rake reset  # Chef-zero内容クリア＆要素の再アップロード
</code></pre><h2>その他</h2><p>ちなみに<a href="https://github.com/whitepages/vagrant-chefzero">vagrant-chefzero</a>というプラグインもあり、これはEnvやRole要素の投入までVagrantファイル内でやるようです。</p><p>knifeを使わないのが逆に気になるので今回はCookbookでChef-zeroをセットアップしてます。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/3/5/vagrant-with-chef-zero</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>20</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Wed, 05 Mar 2014 09:08:14 +0000</pubDate>
      <wp:post_date>2014-03-05 09:08:14</wp:post_date>
      <wp:post_date_gmt>2014-03-05 09:08:14</wp:post_date_gmt>
      <category domain="post_tag" nicename="chef"><![CDATA[chef]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
      <wp:postmeta>
        <wp:meta_key>_thumbnail_id</wp:meta_key>
        <wp:meta_value><![CDATA[22]]></wp:meta_value>
      </wp:postmeta>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/5316e961e4b0e91cea1360c9/1394010465590/vagratn_with_chef-zero.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/5316e961e4b0e91cea1360c9/1394010465590/vagratn_with_chef-zero.png</link>
      <title>attachment-5316e961e4b0e91cea1360c9</title>
      <wp:post_name>vagratn-with-chef-zero-png</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>21</wp:post_id>
      <wp:post_parent>20</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-5316e961e4b0e91cea1360c9]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-5316e961e4b0e91cea1360c9]]></excerpt:encoded>
      <pubDate>Wed, 05 Mar 2014 09:07:45 +0000</pubDate>
      <wp:post_date>2014-03-05 09:07:45</wp:post_date>
      <wp:post_date_gmt>2014-03-05 09:07:45</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/5316e862e4b02cc79a11daa7/1394010621084/vagratn_with_chef-zero.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/5316e862e4b02cc79a11daa7/1394010621084/vagratn_with_chef-zero.png</link>
      <title>attachment-5316e862e4b02cc79a11daa7</title>
      <wp:post_name>vagratn-with-chef-zero-png</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>22</wp:post_id>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-5316e862e4b02cc79a11daa7]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-5316e862e4b02cc79a11daa7]]></excerpt:encoded>
      <pubDate>Wed, 05 Mar 2014 09:08:14 +0000</pubDate>
      <wp:post_date>2014-03-05 09:08:14</wp:post_date>
      <wp:post_date_gmt>2014-03-05 09:08:14</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <title>第一回XEggで『さくらのクラウドフォーメーション with Chef 』</title>
      <link>/blog/2014/2/16/xegg-sakura-with-chef</link>
      <content:encoded><![CDATA[<p>2月15日に大阪のグランフロントで開催された、<a href="http://innovationegg.doorkeeper.jp/events/7435">Innovation EGG 第二回 XEgg 1st『クラウド未経験者向けITコミュニティ＆クラウドベンダー合同勉強会』</a>で行ったセッションの話。</p>

<p><a href="http://innovationegg.doorkeeper.jp/">Innovation EGGとは？</a></p>

<h2 id="">イベントのテーマと課題</h2>

<p>今回声がかかったのはXEgg(クロスエッグ)と題されたイベントで、テーマによって選出されたベンダにITコミュニティを組み合わせてなんかやってくれと言う話だった。</p>

<p>第一回XEggのテーマはクラウド、私は<a href="http://chef-meetup-kansai.doorkeeper.jp/">Chef meetup Kansai</a>の主催者としてITコミュニティ枠で参加。 さわる対象のクラウドベンダは『さくらインターネット』、要は『さくらのクラウド』を触りましょうと。</p>
 
   <iframe src="http://www.slideshare.net/slideshow/embed_code/31232391" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/YukihikoSawanobori/x-egg01-chef" title="さくらのクラウドフォーメーション with Chef [XEgg session]" target="_blank">さくらのクラウドフォーメーション with Chef [XEgg session]</a> </strong> from <strong><a href="http://www.slideshare.net/YukihikoSawanobori" target="_blank">Yukihiko Sawanobori</a></strong> </div>
 
<p></p><h2>セッション裏話</h2><p>セッションの大筋はスライドの通りで、話した内容はその場で聞いていただいた方々がご存知です。
ブログではどうしてあんなセッションになったのか振り返ってみます。</p><h3>ターゲットの決定</h3><p>イベントの参加対象者は、『クラウド未経験者』とのことでした。ずいぶんもやっとしています。</p><p>セッションの内容をChef初心者向けに丁寧に解説とすることも考えましたが、テーマからいって参加者がChefに興味あるとも限らないうえ、同時に動いていたプロジェクトのこともあわせて、そういうのは <strong>私が飽きていました</strong> 。</p><p>そもそも私はChefを売ってるわけでもないし、イベントの主軸はクラウドベンダだし、どうせなら自分が興味あることをセッションにしてしまうほうが楽しい。</p><p>ということでセッションのターゲットはクラウドベンダの『さくらインターネットのスタッフ』と、同枠の『MongoDBコミュニティ』に絞りました。</p><h3 id="chef">Chefの紹介</h3><p>Chefはその特性上適用できる範囲がとても広く、組織によって様々に使い方を選べます。
そもそもChefには決まった使い方も無く、あるのは各組織のワークフローやポリシーに合わせてシステムの構成管理をできる柔軟性くらいです。</p><p>説明したってきりがないので、旧態依然とした構成管理への皮肉を交えつつ、最初から視聴者全員置いてきぼりを目標にさっと流しました。</p><p>イベントテーマ的に主役では無いですし。</p><h3>使ってみました系と海外との比較</h3><p>このへんは裏表あまりなく、結構思うまま言ったらこうなった。</p><blockquote data-preserve-html-node="true" class="twitter-tweet" lang="ja"><p data-preserve-html-node="true">sawanoboly氏、さくらの田中さんの前でさくらのクラウドAPIのdisを繰り広げている。でもこういうのは参考意見として良いよね。 <a data-preserve-html-node="true" href="https://twitter.com/search?q=%23xegg&amp;src=hash">#xegg</a></p>— MATSUMOTO Ryosuke (@matsumotory) <a data-preserve-html-node="true" href="https://twitter.com/matsumotory/statuses/434508042814513152">2014, 2月 15</a></blockquote><script data-preserve-html-node="true" async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><p>コンピュータリソースに特化したサービスと比べるのは少々ごまかしを含みますが、ややインパクトを重視してChefと手っ取り早く連携させたりとりあえずサービスをリリースしようといった視点からあえて見た体で展開することにしました。</p><p>実際、『ボクのデータセンター』を作りたい方には非常にいいと思います。</p><p>ここの中で『ホビー対傭兵』という比喩が出てきますが、この表現にもうちょっとだけ突っ込んでみます。</p><p>日本の企業は上流工程をプロパーが行い、開発や現場やを外注に任せるという図式がよく見られます。
自社好みにカスタマイズ可能なプロパーと、プロとして現場の取り仕切りを任せる外注さんと。スライドの傭兵さんはいわば外注に当たるわけですね。</p><p>国内ベンダと海外ベンダで提供するサービスと需要とに、なんだかちょっとねじれがあるような気がしています。</p><h3 id="fog">Fogの『さくらのクラウド』サポートについて</h3><p>以前から国内クラウド向けにはChefに関連したライブラリ(<a href="http://rubygems.org/gems/knife-zcloudjp">knife-zcloudjp</a>,<a href="http://rubygems.org/gems/kitchen-zcloudjp">kitchen-zcloudjp</a>など)を公開しており、機会があればFogのプロバイダも書いてみたいと思っていました。</p><p>そもそもFogに日本のプロバイダがないのは前々から気に入らなかったこともあって、今回の『さくらのクラウド』はそこそこ渡りに船でした。 <br>
日本語がわからないとサインアップが困難だったりするのですが、そこは気にしないことにします。</p><p>このFog対応に思ったより時間をとられたので、他のやりたかったことができなかった弊害はありましたが、コンピュータリソースがカジュアルに上がってこないと(Chef的に)使いづらかったことは確かなので仕方がありませんでした。</p><h3 id="chef">Chefとインテグレーション</h3><p>スタートアップスクリプトのような使い捨てでなく、クラウドAPIを叩く瞬間からChefの支配は始まっているんですよというアピールをしてみました。
せいぜい計算リソースにすぎないコンピュータインスタンスに、たとえばわざわざ名前をつけて可愛がりながら育てるなんて、もはやナンセンスではないのかという啓発も込めています。</p><h3>まとめと今後の展開</h3><p>言いたい放題のセッションでしたが、定めたターゲットさくらインターネットのスタッフ一同には田中社長をはじめ『面白かった』と感想をいただいたのでめでたしめでたしと。</p><p>しかし今回時間の関係上、『さくらのクラウド』の全力を引き出したとは言いがたい。 <br>
そしてクラウドフォーメーションと銘打っておきながら、ネットワーク関係やLB、それと先日発表されたクラウドストレージにも手を出していません。</p><p>できればyamlかjsonの定義ファイルを食わせればシステム構築するところまで、それこそ某クラウドフォーメーション程度の実装までしておきたいなあ。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/2/16/xegg-sakura-with-chef</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>23</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Sun, 16 Feb 2014 14:24:20 +0000</pubDate>
      <wp:post_date>2014-02-16 14:24:20</wp:post_date>
      <wp:post_date_gmt>2014-02-16 14:24:20</wp:post_date_gmt>
      <category domain="post_tag" nicename="event"><![CDATA[event]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <title>Install fail2ban to the SmartOS</title>
      <link>/blog/2014/2/6/fail2ban-for-smartos</link>
      <content:encoded><![CDATA[<p><a href="http://www.fail2ban.org/wiki/index.php/Main_Page">fail2ban</a>がSolaris(OpenSolaris)に対応していたので、Joyent SmartOSに導入する。</p>

<ul>
<li><a href="https://github.com/fail2ban/fail2ban/blob/0.8.12/README.Solaris">0.8.12/README.Solaris</a> </li>
</ul>

<p>上記Solarisの内容ではちょっと困る。</p>

<h2 id="patchforthesmartos">Patch for the SmartOS</h2>

<p>パスの問題程度だったので、最新安定版の0.8.12をベースにパッチを作成した。</p>

<p><a href="https://gist.github.com/sawanoboly/8838359">https://gist.github.com/sawanoboly/8838359</a></p>

<script data-preserve-html-node="true" src="https://gist.github.com/sawanoboly/8838359.js?file=0.8.12_smartos.patch"></script>

<h2 id="installtothesmartos">Install to the SmartOS</h2>

<p>インストールはこのように。</p>

<p>GitリポジトリでもアーカイブでもOKだが、パッチファイルはコピペするとインデントが怪しくなるのでgistのdownloadリンクを使うのがいい。</p>

<script data-preserve-html-node="true" src="https://gist.github.com/sawanoboly/8838359.js?file=README.smartos.md"></script>

<h2 id="ban">Ban</h2>

<p>Banする方式はTCP WrapperとIpfilterが使える。</p>

<h3 id="tcpwrapperban">TCP WrapperでBan</h3>

<p><code>hosts.deny</code>に設定を出し入れするやりかた。</p>

<p>READMEにもあるけど、TCP Wrapperは有効にしておく。</p>

<p><code>inetadm -p</code>で確認。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true"># inetadm -p

-- snip --

tcp_wrappers=TRUE

-- snip --
</code></pre>

<p><code>inetadm -M</code>で設定変更。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true">inetadm -M tcp_wrappers=true
</code></pre>

<p>SSH(TCP/22)をBanするサンプル。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true">## cat /etc/fail2ban/jail.local 

[ssh-tcpwrapper]

enabled = true
filter = sshd
action = hostsdeny[daemon_list=sshd]
logpath = /var/log/authlog
</code></pre>

<p>SmartOSのバージョンによっては <code>/var/log/auth.log</code>だったり、syslogの設定がそもそも無かったりするので調整しよう。</p>

<p>このとおり<code>Jail list</code>が登録される。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true"># fail2ban-client status
Status
|- Number of jail:      1
`- Jail list:           ssh-tcpwrapper
</code></pre>

<h3 id="ipfilterban">IPFilterでBan</h3>

<p>ipfコマンドでルールの管理をするやりかた。</p>

<p>ちなみにリストの最後に<code>quick</code>で出し入れするやり方になるので、既存のルールと干渉します。</p>

<p>fail2banと一緒に使うため、blockとpass対象ではquickを使わないようにします。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true">## Example of filter rules with using fail2ban.
pass out quick from any to any keep state
block in all                                                                                ## without quick
pass in quick from 127.0.0.0/8 to any keep state
pass in quick proto icmp from any to any keep state
pass in proto tcp from any to any port = 22 keep state   ## without quick
pass in quick proto tcp from any to any port = 80 keep state
pass in quick proto tcp from any to any port = 443 keep state
</code></pre>

<p>SSH(TCP/22)をBanするサンプル。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true">## cat /etc/fail2ban/jail.local 

[ssh-tcpwrapper]

enabled = true
filter = sshd
action = ipfilter
logpath = /var/log/authlog
</code></pre>

<p>このとおり<code>Jail list</code>が登録される。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true"># fail2ban-client status        
Status
|- Number of jail:      1
`- Jail list:           ssh-ipfilter
</code></pre>

<h2 id="result">Result</h2>

<p>TCP WrapperでBanしたらこんな感じ。</p>

<pre data-preserve-html-node="true"><code data-preserve-html-node="true">#  tail -f /var/log/fail2ban.log 
2014-02-06 04:01:51,728 fail2ban.server [85350]: INFO    Changed logging target to /var/log/fail2ban.log for Fail2ban v0.8.12
2014-02-06 04:01:51,740 fail2ban.jail   [85350]: INFO    Creating new jail 'ssh-tcpwrapper'
2014-02-06 04:01:51,746 fail2ban.jail   [85350]: INFO    Jail 'ssh-tcpwrapper' uses poller
2014-02-06 04:01:51,821 fail2ban.jail   [85350]: INFO    Initiated 'polling' backend
2014-02-06 04:01:51,832 fail2ban.filter [85350]: INFO    Added logfile = /var/log/authlog
2014-02-06 04:01:51,836 fail2ban.filter [85350]: INFO    Set maxRetry = 3
2014-02-06 04:01:51,840 fail2ban.filter [85350]: INFO    Set findtime = 600
2014-02-06 04:01:51,841 fail2ban.actions[85350]: INFO    Set banTime = 600
2014-02-06 04:01:51,933 fail2ban.jail   [85350]: INFO    Jail 'ssh-tcpwrapper' started

-- ban log

2014-02-06 04:03:32,957 fail2ban.actions[85350]: WARNING [ssh-tcpwrapper] Ban xxx.xxx.xxx.xxx
2014-02-06 04:03:34,978 fail2ban.actions[85350]: INFO    [ssh-tcpwrapper] xxx.xxx.xxx.xxx already banned
</code></pre>

<p>パッチは本家にIssueでお知らせしたので、そのうち含まれたらええなあと。</p>

<p><a href="https://github.com/fail2ban/fail2ban/issues/607">fail2ban/issues#607</a></p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/2/6/fail2ban-for-smartos</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>24</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Thu, 06 Feb 2014 08:45:49 +0000</pubDate>
      <wp:post_date>2014-02-06 08:45:49</wp:post_date>
      <wp:post_date_gmt>2014-02-06 08:45:49</wp:post_date_gmt>
      <category domain="post_tag" nicename="smartos"><![CDATA[smartos]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
    </item>
    <item>
      <title>Mapping Route53 and Squarespace</title>
      <link>/blog/2014/1/20/mapping-route53-and-squarespace</link>
      <content:encoded><![CDATA[<p>ブログをSquarespaceに移すので、遊んでいたドメインの<code>sawanoboly.net</code>を割り当てることにした。</p>

<p>独自ドメインはCNAMEを使うタイプ。まあ普通だと思う。</p>

<p>ネームサービスはRoute53を使うことにしたので、<code>http://sawanoboly.net</code>[^1]の取り扱いを次のようにした。</p>

<p>[^1]: いわゆる Zone Apex / Naked Domain / Root Domainと呼ばれるAレコードを使うHTTPアクセス</p>
  
      <img src="http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/52dde796e4b050564e0f952b/1390274455063/route53_to_squarespace.png" alt=""/>
  

<p>Aliasでs3 bucketを選べるのは楽だね。</p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/1/20/mapping-route53-and-squarespace</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>25</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 20 Jan 2014 07:28:33 +0000</pubDate>
      <wp:post_date>2014-01-20 07:28:33</wp:post_date>
      <wp:post_date_gmt>2014-01-20 07:28:33</wp:post_date_gmt>
      <category domain="post_tag" nicename="aws"><![CDATA[aws]]></category>
      <category domain="post_tag" nicename="route53"><![CDATA[route53]]></category>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
      <wp:postmeta>
        <wp:meta_key>_thumbnail_id</wp:meta_key>
        <wp:meta_value><![CDATA[27]]></wp:meta_value>
      </wp:postmeta>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/52dde796e4b050564e0f952b/1390274455063/route53_to_squarespace.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/52dde796e4b050564e0f952b/1390274455063/route53_to_squarespace.png</link>
      <title>attachment-52dde796e4b050564e0f952b</title>
      <wp:post_name>route53-to-squarespace-png</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>26</wp:post_id>
      <wp:post_parent>25</wp:post_parent>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-52dde796e4b050564e0f952b]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-52dde796e4b050564e0f952b]]></excerpt:encoded>
      <pubDate>Tue, 21 Jan 2014 03:20:54 +0000</pubDate>
      <wp:post_date>2014-01-21 03:20:54</wp:post_date>
      <wp:post_date_gmt>2014-01-21 03:20:54</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <wp:attachment_url>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/52dcbfb6e4b0f48cdba6688f/1390274487733/route53_to_squarespace.png</wp:attachment_url>
      <link>http://static1.squarespace.com/static/52c988fae4b0df7dc79e2433/52c98a57e4b04a45ef2b3b6c/52dcbfb6e4b0f48cdba6688f/1390274487733/route53_to_squarespace.png</link>
      <title>attachment-52dcbfb6e4b0f48cdba6688f</title>
      <wp:post_name>route53-to-squarespace-png</wp:post_name>
      <wp:post_type>attachment</wp:post_type>
      <wp:post_id>27</wp:post_id>
      <wp:status>inherit</wp:status>
      <content:encoded><![CDATA[img-52dcbfb6e4b0f48cdba6688f]]></content:encoded>
      <excerpt:encoded><![CDATA[exc-52dcbfb6e4b0f48cdba6688f]]></excerpt:encoded>
      <pubDate>Mon, 20 Jan 2014 07:28:33 +0000</pubDate>
      <wp:post_date>2014-01-20 07:28:33</wp:post_date>
      <wp:post_date_gmt>2014-01-20 07:28:33</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
    </item>
    <item>
      <title>またブログをやります</title>
      <link>/blog/2014/1/6</link>
      <content:encoded><![CDATA[<p>ここで</p><p> </p><p>昔のはこちら&nbsp;<a href="http://www2.sawanoboly.net">http://www2.sawanoboly.net</a></p><p>ここもそうだ&nbsp;<a target="_blank" href="http://shinobra.com/">http://shinobra.com/</a></p><p>ここもかな&nbsp;<a href="http://www.cowboyhacks.com/home/">http://www.cowboyhacks.com/home/</a></p>]]></content:encoded>
      <excerpt:encoded />
      <wp:post_name>2014/1/6</wp:post_name>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>28</wp:post_id>
      <wp:status>publish</wp:status>
      <pubDate>Mon, 06 Jan 2014 02:54:25 +0000</pubDate>
      <wp:post_date>2014-01-06 02:54:25</wp:post_date>
      <wp:post_date_gmt>2014-01-06 02:54:25</wp:post_date_gmt>
      <dc:creator>sawanoboriyu@higanworks.com</dc:creator>
      <wp:comment_status>open</wp:comment_status>
      <wp:comment>
        <wp:comment_id>1</wp:comment_id>
        <wp:comment_approved>1</wp:comment_approved>
        <wp:comment_author><![CDATA[Hiroyuki Urasoko]]></wp:comment_author>
        <wp:comment_author_url />
        <wp:comment_author_IP>219.117.239.161</wp:comment_author_IP>
        <wp:comment_date>2014-01-21 09:51:04</wp:comment_date>
        <wp:comment_date_gmt>2014-01-21 09:51:04</wp:comment_date_gmt>
        <wp:comment_content><![CDATA[<p>ここは？ http://sa3g.blogspot.jp/</p>]]></wp:comment_content>
        <wp:comment_type />
        <wp:comment_parent>0</wp:comment_parent>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>2</wp:comment_id>
        <wp:comment_approved>1</wp:comment_approved>
        <wp:comment_author_email>sawanoboriyu@higanworks.com</wp:comment_author_email>
        <wp:comment_author><![CDATA[Yukihiko Sawanobori]]></wp:comment_author>
        <wp:comment_author_url />
        <wp:comment_author_IP>1.115.197.205</wp:comment_author_IP>
        <wp:comment_date>2014-01-21 09:53:47</wp:comment_date>
        <wp:comment_date_gmt>2014-01-21 09:53:47</wp:comment_date_gmt>
        <wp:comment_content><![CDATA[<p>そこは自分に定着しなかったのです。<br />中身は2Gの全部コピーなので、まぎらわしいっすね。</p>]]></wp:comment_content>
        <wp:comment_type />
        <wp:comment_parent>1</wp:comment_parent>
      </wp:comment>
    </item>
    <item>
      <link>/new-page/</link>
      <title>New Page</title>
      <pubDate>Fri, 31 Jan 2014 10:44:17 +0000</pubDate>
      <content:encoded />
      <wp:post_name>new-page</wp:post_name>
      <wp:post_type>page</wp:post_type>
      <wp:post_id>29</wp:post_id>
      <wp:status>publish</wp:status>
    </item>
  </channel>
</rss>

